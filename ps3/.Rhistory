setwd('/Users/annie/Desktop/QTM385/QTM350_Github/QTM350 Github/QTM385/ps3')
c_test <- read.csv('college_test.csv')
c_train <- read.csv('college_train.csv')
o_test <- read.csv('office_test.csv')
o_train <- read.csv('office_train.csv')
View(o_train)
p2p1_m <- lm(imdb_rating~season+episode+episode_name+andy+angela+darryl+dwight+jim+kelly+kevin+michael+oscar+pam+phyllis+ryan+toby+erin+jan+ken_kwapis+greg_daniels+b_j_novak+paul_lieberstein+mindy_kaling+paul_feig+gene_stupnitsky+jennifer_celotta+randall_einhorn+brent_forrester+jeffrey_blitz+justin_spitzer, data = o_train)
View(p2p1_m)
View(o_train)
#LOOCV
lm_pred_metrics <- function(fit_model){
N <- length(fit_model$residuals)
res <- fit_model$residuals
LOOCV <- (res[1] / (1-hatvalues(fit_model)[1]))^2
if (N>=2){
for (i in 2:N){
LOOCV <- LOOCV + (res[i] / (1-hatvalues(fit_model)[i]))^2
}
}
LOOCV_final <- LOOCV / N
return(c("LOOCV" = LOOCV_final))
}
lm_pred_metrics(p2p1_m)
o_train$episode_name <- NULL
p2p1_m <- lm(imdb_rating~. data = o_train)
p2p1_m <- lm(imdb_rating~., data = o_train)
p2p1_m
lm_pred_metrics(p2p1_m)
p2p1_m$terms
p2p1_m$coefficients
View(p2p1_m)
cf <-coef(summary(p2p1_m,complete = TRUE))
rownames(cf)
View(cf)
ggplot(data = p2p1_m, aes(x = rownames(cf), y = cf[,1])) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
geom_text(aes(label = Count), hjust = 1.2, colour = "white", fontface = "bold") +
labs(x = "\n Coefficient Estimate \n", y = "\n Features \n") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
library(ggplot2)
library(data.table)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning = FALSE, fig.width = 16/2, fig.height = 9/2, tidy.opts=list(width.cutoff=60), tidy=TRUE)
ggplot(data = p2p1_m, aes(x = rownames(cf), y = cf[,1])) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
geom_text(aes(label = Count), hjust = 1.2, colour = "white", fontface = "bold") +
labs(x = "\n Coefficient Estimate \n", y = "\n Features \n") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
cf <- c(rownames(cf), cf)
cf <-coef(summary(p2p1_m,complete = TRUE))
cf <- c(rownames(cf), cf)
View(cf)
cf <-coef(summary(p2p1_m,complete = TRUE))
cf <- data.frame(rownames(cf), cf)
ggplot(data = p2p1_m, aes(x = cf[,1], y = cf[,2])) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
geom_text(aes(label = Count), hjust = 1.2, colour = "white", fontface = "bold") +
labs(x = "\n Coefficient Estimate \n", y = "\n Features \n") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
cf[,1]
names(cf[,1])
colnames(cf[,1])
colnames(cf)
ggplot(data = cf, aes(x = rownames.cf., y = Estimate)) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
geom_text(aes(label = Count), hjust = 1.2, colour = "white", fontface = "bold") +
labs(x = "\n Coefficient Estimate \n", y = "\n Features \n") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
ggplot(data = cf, aes(x = rownames.cf., y = Estimate)) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
geom_text(aes(label = rownames.cf.), hjust = 1.2, colour = "white", fontface = "bold") +
labs(x = "\n Coefficient Estimate \n", y = "\n Features \n") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
ggplot(data = cf, aes(x = Estimate, y = rownames.cf.)) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
geom_text(aes(label = rownames.cf.), hjust = 1.2, colour = "white", fontface = "bold") +
labs(x = "\n Coefficient Estimate \n", y = "\n Features \n") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
ggplot(data = cf, aes(x = Estimate, y = rownames.cf.)) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
labs(x = "\n Coefficient Estimate", y = "Features \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
ggplot(data = cf, aes(x = rownames.cf., y = Estimate)) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
labs(x = "\n Features \n", y = "Coefficient Estimate \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak))
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak)) %>% filter(season == c(9,7,5,4,3,2))
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak), filter(season == c(9,7,5,4,3,2)))
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak) %>% filter(season == c(9,7,5,4,3,2))
View(p2p1_imp_pred)
View(p2p1_imp_pred)
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak)) %>% filter(season == c(9,7,5,4,3,2))
library(dplyr)
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak)) %>% filter(season == c(9,7,5,4,3,2))
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak))
p2p1_imp_pred <- filter(p2p1_imp_pred, season == c(7,5,4,3,2))
View(p2p1_imp_pred)
p2p1_imp_pred <- filter(p2p1_imp_pred, season == 7 | season == 5 | season == 4 | season == 3 | season == 2)
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak))
p2p1_imp_pred <- filter(p2p1_imp_pred, season == 7 | season == 5 | season == 4 | season == 3 | season == 2)
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak))
p2p1_imp_pred <- filter(p2p1_imp_pred, season == "Season 7" | season == "Season 5" | season == "Season 4" | season == "Season 3" | season == "Season 2")
View(p2p1_imp_pred)
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak, imdb_rating))
p2p1_imp_pred <- filter(p2p1_imp_pred, season == "Season 7" | season == "Season 5" | season == "Season 4" | season == "Season 3" | season == "Season 2")
p2p1_imp_pred_m <- lm(imdb_rating~., data = p2p1_imp_pred)
View(p2p1_imp_pred_m)
#LOOCV
lm_pred_metrics(p2p1_imp_pred_m)
lm_pred_metrics(p2p1_m)
#LOOCV
lm_pred_metrics <- function(fit_model){
LOOCV <- mean(fit_model$residuals / (1-hatvalues(fit_model)))^2
return(c("LOOCV" = LOOCV))
}
lm_pred_metrics(p2p1_m) #LOOCV is 0.2343854
#LOOCV
lm_pred_metrics <- function(fit_model){
LOOCV <- mean(fit_model$residuals / (1-hatvalues(fit_model))^2)
return(c("LOOCV" = LOOCV))
}
lm_pred_metrics(p2p1_m) #LOOCV is 0.2343854
#LOOCV
lm_pred_metrics <- function(fit_model){
LOOCV <- mean((fit_model$residuals / (1-hatvalues(fit_model)))^2)
return(c("LOOCV" = LOOCV))
}
lm_pred_metrics(p2p1_m) #LOOCV is 0.2343854
#LOOCV
lm_pred_metrics(p2p1_imp_pred_m) #LOOCV is 0.1831386
View(o_train)
p2p2_pred <- as.matrix(o_train[,-1])
p2p2_out <- as.matrix(o_train$imdb_rating)
p2p2_ridgem <- glmnet::glmnet(x = p2p2_pred, y = p2p2_out, family = "gaussian", alpha = 0)
library(glmnet)
install.packages('glmnet')
library(glmnet)
install.packages("glmnet", dependencies = FALSE)
library(glmnet)
p2p2_ridgem <- glmnet::glmnet(x = p2p2_pred, y = p2p2_out, family = "gaussian", alpha = 0)
View(p2p2_ridgem)
View(p2p2_pred)
library(caret)
o_train$season <- factor(o_train$season)
dummy_o_train <- caret::dummyVars("~.", data = o_train)
o_train <- data.frame(predict(dummy_o_train, newdata = o_train))
View(o_train)
p2p2_pred <- as.matrix(o_train[,-1])
View(p2p2_pred)
rm(list = ls())
o_test <- read.csv('office_test.csv')
o_train <- read.csv('office_train.csv')
o_train$season <- factor(o_train$season)
dummy_o_train <- caret::dummyVars("~.", data = o_train)
o_train <- data.frame(predict(dummy_o_train, newdata = o_train))
View(o_train)
#setwd('/Users/billyge/Desktop/Emory Fall 2022/QTM 385-4/problem sets/ps github/ps3')
setwd('/Users/annie/Desktop/QTM385/QTM350_Github/QTM350 Github/QTM385/ps3')
rm(list = ls())
c_test <- read.csv('college_test.csv')
c_train <- read.csv('college_train.csv')
o_test <- read.csv('office_test.csv')
o_train <- read.csv('office_train.csv')
o_train$episode_name <- NULL
p2p1_m <- lm(imdb_rating~., data = o_train)
#LOOCV
lm_pred_metrics <- function(fit_model){
LOOCV <- mean((fit_model$residuals / (1-hatvalues(fit_model)))^2)
return(c("LOOCV" = LOOCV))
}
lm_pred_metrics(p2p1_m) #LOOCV is 0.2343854
cf <-coef(summary(p2p1_m,complete = TRUE))
cf <- data.frame(rownames(cf), cf)
ggplot(data = cf, aes(x = rownames.cf., y = Estimate)) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
labs(x = "\n Features \n", y = "Coefficient Estimate \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak, imdb_rating))
p2p1_imp_pred <- filter(p2p1_imp_pred, season == "Season 7" | season == "Season 5" | season == "Season 4" | season == "Season 3" | season == "Season 2")
p2p1_imp_pred_m <- lm(imdb_rating~., data = p2p1_imp_pred)
#LOOCV
lm_pred_metrics(p2p1_imp_pred_m) #LOOCV is 0.1831386
View(o_train)
o_train$season <- factor(o_train$season)
dummy_o_train <- caret::dummyVars("~.", data = o_train)
o_train <- data.frame(predict(dummy_o_train, newdata = o_train))
p2p2_pred <- as.matrix(o_train[,-1])
p2p2_out <- as.matrix(o_train$imdb_rating)
p2p2_ridgem <- glmnet::glmnet(x = p2p2_pred, y = p2p2_out, family = "gaussian", alpha = 0)
View(p2p1_imp_pred)
View(cf)
cf <-coef(summary(p2p1_m,complete = TRUE))
View(cf)
View(p2p1_m)
View(o_train)
p2p1_m <- lm(imdb_rating~., data = o_train)
library(ggplot2)
library(data.table)
library(dplyr)
library(glmnet)
library(caret)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning = FALSE, fig.width = 16/2, fig.height = 9/2, tidy.opts=list(width.cutoff=60), tidy=TRUE)
#setwd('/Users/billyge/Desktop/Emory Fall 2022/QTM 385-4/problem sets/ps github/ps3')
setwd('/Users/annie/Desktop/QTM385/QTM350_Github/QTM350 Github/QTM385/ps3')
rm(list = ls())
c_test <- read.csv('college_test.csv')
c_train <- read.csv('college_train.csv')
o_test <- read.csv('office_test.csv')
o_train <- read.csv('office_train.csv')
o_train$episode_name <- NULL
p2p1_m <- lm(imdb_rating~., data = o_train)
#LOOCV
lm_pred_metrics <- function(fit_model){
LOOCV <- mean((fit_model$residuals / (1-hatvalues(fit_model)))^2)
return(c("LOOCV" = LOOCV))
}
lm_pred_metrics(p2p1_m) #LOOCV is 0.2343854
cf <-coef(summary(p2p1_m,complete = TRUE))
cf <- data.frame(rownames(cf), cf)
ggplot(data = cf, aes(x = rownames.cf., y = Estimate)) +
geom_bar(stat = "identity", width = 0.75) +
coord_flip() +
labs(x = "\n Features \n", y = "Coefficient Estimate \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12))
p2p1_imp_pred <- subset(o_train, select=c(season, greg_daniels, b_j_novak, imdb_rating))
p2p1_imp_pred <- filter(p2p1_imp_pred, season == "Season 7" | season == "Season 5" | season == "Season 4" | season == "Season 3" | season == "Season 2")
p2p1_imp_pred_m <- lm(imdb_rating~., data = p2p1_imp_pred)
#LOOCV
lm_pred_metrics(p2p1_imp_pred_m) #LOOCV is 0.1831386
o_train$season <- factor(o_train$season)
dummy_o_train <- caret::dummyVars("~.", data = o_train)
o_train <- data.frame(predict(dummy_o_train, newdata = o_train))
p2p2_pred <- as.matrix(o_train[,-1])
p2p2_out <- as.matrix(o_train$imdb_rating)
p2p2_ridgem <- glmnet::glmnet(x = p2p2_pred, y = p2p2_out, family = "gaussian", alpha = 0)
View(o_train)
View(o_train)
View(p2p2_pred)
p2p2_pred <- as.matrix(o_train[,-38])
View(p2p2_pred)
View(p2p2_out)
View(o_train)
p2p2_ridgem <- glmnet::glmnet(x = p2p2_pred, y = p2p2_out, family = "gaussian", alpha = 0)
View(p2p2_ridgem)
View(p2p2_pred)
p2p2_ridgem$lambda
cv.glmnet(x = p2p2_pred, y = p2p2_out, family = "gaussian", alpha = 0, nfolds = 10, type.measure = "mse")
View(p2p2_ridgem)
